<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianchuangjie.lianchuangjie.mapper.EnquiryMapper.EnquirySingleMatchMapper">

    <select id="query" resultType="com.lianchuangjie.lianchuangjie.vo.Enquiry.EnquiryMatchItemVO">
        DECLARE @DemandQty INT; /*需求数量*/
        DECLARE @DeptCode VARCHAR(255); /*销售部门*/
        DECLARE @SlpCode INT; /*销售员*/
        SET @DemandQty = ${sc.getDemandQty};
        SET @DeptCode = ${sc.getDeptCode};
        SET @SlpCode = ${sc.getSlpCode};
        SELECT
            SDADA.QuoBrand, /*匹配品牌*/
            SDADA.TAG, /*匹配TAG*/
            SDADA.sno, /*匹配型号*/
            SDADA.spq, /*spq*/
            SDADA.ECCN, /*ECCN*/
            IIF(#{sc.brand} IS NULL, SDADA.QuoBrand, #{sc.brand}) AS 'Brand', /*客户需求品牌*/
            #{sc.modle}                  AS 'Modle', /*客户需求型号*/
            @DemandQty                   AS 'DemandQty', /*客户需求数量*/
            stock.Quantity, /*库存数量*/
            U_OPRI.PrePrice, /*参考价格*/
            U_OPRI.PrePrice * @DemandQty AS 'TotalPrice', /*预估总价*/
            N'模糊搜索'                  AS 'Match' /*匹配情况*/,
            /*询价状态*/
            (
                CASE
                    WHEN @DemandQty &lt; stock.Quantity THEN 'C'
                    WHEN U_OPRI.PrePrice * @DemandQty > 1000 OR U_OPRI.PrePrice * @DemandQty IS NULL THEN 'B'
                    ELSE 'E'
                END
            )                        AS Status,
            (
                CASE
                    /*完全匹配到的且需要采购报价的，匹配对应的采购员*/
                    WHEN SDADA.TAG IS NULL THEN ''
                    WHEN (
                        U_OPRI.PrePrice * @DemandQty > 1000
                        OR U_OPRI.PrePrice * @DemandQty IS NULL
                        OR U_OPRI.PrePrice * @DemandQty = 0
                    ) THEN (
                        /*匹配到的采购员格式为：采购员编号1:采购员姓名1,采购员编号2:采购员姓名2...*/
                        SELECT CAST(CAST(BuyerInfo.UserSign AS VARCHAR) + ':' + BuyerInfo.UserName AS VARCHAR) + ','
                        FROM T_OUSI BuyerInfo /*采购员信息表*/
                        LEFT JOIN U_PUR1 U_PUR1 ON U_PUR1.OwnerCode = BuyerInfo.UserSign
                        LEFT JOIN U_PUR2 U_PUR2 ON U_PUR2.OwnerCode = BuyerInfo.UserSign
                        LEFT JOIN U_PUR9 U_PUR9 ON U_PUR9.OwnerCode = BuyerInfo.UserSign
                        WHERE BuyerInfo.U_IsBuyer = 'Y'
                        AND U_PUR2.Brand LIKE CONCAT('%', SDADA.QuoBrand, '%')
                        /*
                        1. 如果U_PUR1.IsSale为Y值，那么需要关联表U_PUR9确认负责的销售列表；
                        2. 如果U_PUR1.IsSale为N值，那么只需参考字段 DeptCode-负责报价的销售部门；
                        */
                        AND (
                            (U_PUR9.SlpCode = @SlpCode AND U_PUR1.IsSale = 'Y')
                            OR (U_PUR1.IsSale = 'N' AND ',' + LTRIM(RTRIM(REPLACE(U_PUR1.DeptCode, ' ', ''))) + ',' LIKE CONCAT('%,', @DeptCode, ',%'))
                        )
                        /*
                        1. 采购权限内是否包含该品牌该型号的ECCN码
                        2. 采购ECCN码为空或为null时表示该采购不受ECCN码限制
                        */
                        AND (
                            ',' + LTRIM(RTRIM(REPLACE(U_PUR1.ECCN, ' ', ''))) + ',' LIKE CONCAT('%', SDADA.ECCN, '%') OR U_PUR1.ECCN = '' OR U_PUR1.ECCN IS NULL
                        )
                        /*
                        1. 预估总价高于采购询价起点时转发给该采购
                        2. 采购询价起点为0或null表示该采购不受价格限制
                        */
                        AND (
                            U_PUR1.StartTotal IS NULL
                            OR U_PUR1.StartTotal &lt; (U_OPRI.PrePrice * @DemandQty)
                            OR U_OPRI.PrePrice * @DemandQty = 0
                            OR U_OPRI.PrePrice * @DemandQty IS NULL
                        )
                        GROUP BY BuyerInfo.UserSign, BuyerInfo.UserName
                        FOR XML PATH ( '' )
                    )
                END
            )                                          AS Buyer /*匹配采购员*/
        FROM SDADA
        LEFT JOIN (
            SELECT
                T_OBTN.ItemName,
                SUM(T.Quantity - T_OBTN.U_LockQty) AS Quantity
            FROM (
                SELECT
                MdAbsEntry,
                SUM(Quantity) AS Quantity
                FROM T_OBTQ
                GROUP BY MdAbsEntry
            ) T
            INNER JOIN T_OBTN ON T.MdAbsEntry = T_OBTN.AbsEntry
            GROUP BY ItemName
        ) stock ON stock.ItemName = SDADA.sno
        LEFT JOIN U_OPRI ON U_OPRI.ItemName = SDADA.sno
        <where>
            SDADA.sno = #{sc.modle}
            <if test="sc.brand != null">
                AND SDADA.QuoBrand = #{sc.brand}
            </if>
        </where>
    </select>
</mapper>