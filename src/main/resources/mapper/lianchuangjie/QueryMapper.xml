<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianchuangjie.lianchuangjie.mapper.Enquiry.BomQueryMapper">
    <select id="queryRelated" resultType="com.lianchuangjie.lianchuangjie.vo.BomQueryItemVO"
            parameterType="com.lianchuangjie.lianchuangjie.dto.Enquiry.EnquirySingleQueryDTO">
        DECLARE @DemandQty INT; /*需求数量*/
        DECLARE @DeptCode VARCHAR; /*销售部门*/
        DECLARE @SlpCode INT; /*销售员*/
        SET @DemandQty = ${sc.getDemandQty};
        SET @DeptCode = ${sc.getDeptCode};
        SET @SlpCode = ${sc.getSlpCode};
        SELECT
            SDADA.QuoBrand, /*匹配品牌*/
            SDADA.TAG, /*匹配TAG*/
            SDADA.sno, /*匹配型号*/
            SDADA.spq, /*spq*/
            SDADA.ECCN, /*ECCN*/
            #{sc.brand}                  AS 'Brand', /*客户需求品牌*/
            #{sc.modle}                  AS 'Modle', /*客户需求型号*/
            @DemandQty                   AS 'DemandQty', /*客户需求数量*/
            stock.Quantity, /*库存数量*/
            U_OPRI.PrePrice, /*参考价格*/
            U_OPRI.PrePrice * @DemandQty AS 'TotalPrice' /*预估总价*/,
            (IIF(SDADA.sno = #{sc.modle} AND SDADA.QuoBrand = #{sc.brand}, N'完全匹配', N'关联型号'))           AS 'Match' /*匹配情况*/,
            (
                CASE
                    WHEN @DemandQty &lt; stock.Quantity THEN 'C'
                    WHEN U_OPRI.PrePrice * @DemandQty > 1000 OR U_OPRI.PrePrice * @DemandQty IS NULL THEN 'B'
                    ELSE 'E'
                END
            )                        AS Status,
            (
                CASE
                    /*采购报价 B*/
                    WHEN U_OPRI.PrePrice * @DemandQty > 1000 OR U_OPRI.PrePrice * @DemandQty IS NULL THEN (
                        SELECT CAST(CAST(T_OUSI.UserSign AS VARCHAR) + ':' + T_OUSI.UserName AS VARCHAR) + ','
                        FROM T_OUSI T_OUSI
                        LEFT JOIN U_PUR1 U_PUR1 ON U_PUR1.OwnerCode = T_OUSI.UserSign
                        LEFT JOIN U_PUR2 U_PUR2 ON U_PUR2.OwnerCode = T_OUSI.UserSign
                        LEFT JOIN U_PUR9 U_PUR9 ON U_PUR9.OwnerCode = T_OUSI.UserSign
                        WHERE T_OUSI.U_IsBuyer = 'Y'
                        AND U_PUR2.Brand LIKE CONCAT('%', SDADA.QuoBrand, '%')
                        /*
                            1. 如果U_PUR1.IsSale为Y值，那么需要关联表U_PUR9确认负责的销售列表；
                            2. 如果U_PUR1.IsSale为N值，那么只需参考字段 DeptCode-负责报价的销售部门；
                        */
                        AND (
                            (U_PUR9.SlpCode = @SlpCode AND U_PUR1.IsSale = 'Y') OR  (
                                U_PUR1.IsSale = 'N' AND ',' + LTRIM(RTRIM(REPLACE(U_PUR1.DeptCode, ' ', ''))) + ',' LIKE CONCAT('%,', @DeptCode, ',%')
                            )
                        )
                        /*
                            1. 采购权限内是否包含该品牌该型号的ECCN码
                            2. 采购ECCN码为空或为null时表示该采购不受ECCN码限制
                        */
                        AND (
                            ',' + LTRIM(RTRIM(REPLACE(U_PUR1.ECCN, ' ', ''))) + ',' LIKE CONCAT('%', SDADA.ECCN, '%')
                            OR U_PUR1.ECCN = ''
                            OR U_PUR1.ECCN IS NULL
                        )
                        /*
                            1. 预估总价高于采购询价起点时转发给该采购
                            2. 采购询价起点为0或null表示该采购不受价格限制
                        */
                        AND (U_PUR1.StartTotal IS NULL OR U_PUR1.StartTotal &lt; (U_OPRI.PrePrice * @DemandQty))
                        GROUP BY T_OUSI.UserSign, T_OUSI.UserName
                        FOR xml path ( '' ))
                    ElSE ''
                END
            )                        AS Buyer
        FROM SDADA
        LEFT JOIN (
            SELECT T_OBTN.ItemName, SUM(T.Quantity - T_OBTN.U_LockQty) AS Quantity
            FROM (SELECT MdAbsEntry, SUM(Quantity) AS Quantity FROM T_OBTQ GROUP BY MdAbsEntry) T
            INNER JOIN T_OBTN ON T.MdAbsEntry = T_OBTN.AbsEntry
            GROUP BY ItemName
        ) stock ON stock.ItemName = SDADA.sno
        LEFT JOIN U_OPRI ON U_OPRI.ItemName = SDADA.sno
        WHERE SDADA.sno IN (
            SELECT SDADA_1.sno
            FROM SDADA SDADA_1
            WHERE SDADA_1.TAG IN (
                SELECT SDADA.TAG
                FROM SDADA
                WHERE SDADA.sno = #{sc.modle} AND SDADA.QuoBrand = #{sc.brand}
            )
        )
    </select>
</mapper>
