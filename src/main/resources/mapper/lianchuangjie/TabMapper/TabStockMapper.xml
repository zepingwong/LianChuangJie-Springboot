<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianchuangjie.lianchuangjie.mapper.TabMapper.TabStockMapper">
    <select id="selectEnquiryTabList" resultType="com.lianchuangjie.lianchuangjie.vo.Enquiry.TabEnquiryStockVO">
        SELECT
            T_OBTQ.WhsCode, /*仓库*/
            T_OBTN.U_AreaType, /*库存性质*/
            T_OBTN.InDate, /*入库时间*/
            T_OBTN.ItemName, /*型号*/
            T_OBTN.U_ECCN, /*ECCN*/
            (SELECT TOP(1) QuoBrand FROM SDADA WHERE SDADA.sno = T_OBTN.ItemName) AS 'QuoBrand', /*品牌*/
            T_OBTN.U_Batch, /*批次*/
            T_OBTQ.Quantity, /*库存数量*/
            T_OBTN.U_LockQty, /*锁货数量*/
            T_OBTN.U_Remark, /*备注*/
            T_OBTN.U_msl, /*MSL*/
            T_OBTN.U_COO, /*产地*/
            T_OBTN.U_MPQ, /*MPQ*/
            T_OBTN.U_BuyerName, /*采购员*/
            T_OBTN.U_Package, /*包装*/
            T_OBTN.U_OriginalBid, /*原标*/
            T_OBTN.U_Secrecy, /*保密*/
            T_OBTN.U_GrindingCode /*磨码说明*/
        FROM T_OBTN /*库存批次表*/
        LEFT JOIN T_OBTQ
            ON T_OBTQ.MdAbsEntry = T_OBTN.AbsEntry /*库存数量表，通过批次和型号代码关联*/
            AND T_OBTQ.ItemCode = T_OBTN.ItemCode
        WHERE T_OBTN.ItemName IN (
            SELECT SDADA_1.sno
            FROM SDADA SDADA_1
            WHERE SDADA_1.TAG IN (
                SELECT SDADA.TAG FROM SDADA WHERE SDADA.sno IN
                <foreach collection="sc.modleList " item="item" open="(" separator="," close=")" index="index">
                    '${item}'
                </foreach>
            )
        )
        <if test="sc.year">
            AND T_OBTN.U_Batch = ${sc.year} /*批次条件*/
        </if>
    </select>
    <select id="selectStockPriceTabList" resultType="com.lianchuangjie.lianchuangjie.vo.StockPrice.TabStockPriceOriginVO">
        DECLARE @PageSize INT;
        DECLARE @CurrentPage INT;
        SET @PageSize = ${sc.size}; /*每页显示数量*/
        SET @CurrentPage = ${sc.page}; /*当前页码*/
        SELECT TOP (@PageSize) *
        FROM (
            SELECT
                ROW_NUMBER() OVER (ORDER BY T_OBTN.ItemName DESC)                          AS ROWNUMBER,
                T_OBTN.ItemName,/*型号*/
                T_OBTN.U_Batch,/*原批次*/
                [dbo].[TransformBatch](T_OBTN.U_Batch) AS Batch, /*现批次*/
                T_OBTN.InDate,/*入库时间*/
                T_OBTN.U_Price,/*成本价*/
                T.Quantity,/*库存数量*/
                T_OBTN.U_Secrecy,/*是否保密*/
                _first.kc_price_final                                                      AS 'First',/*最近一次*/
                _Second.kc_price_final                                                     AS 'Second',/*最近两次*/
                _Third.kc_price_final                                                      AS 'Third',
                IIF(ISNULL(T_OITM.U_QuoBrand, '') = '', T_OITM.U_Brand, T_OITM.U_QuoBrand) AS Brand,
                DateDiff(dd, T_OBTN.InDate, getdate())                                     AS 'StockDays' /*库存天数*/
            FROM (SELECT MdAbsEntry, SUM(Quantity) AS Quantity FROM T_OBTQ GROUP BY MdAbsEntry) T
            INNER JOIN T_OBTN ON T.MdAbsEntry = T_OBTN.AbsEntry
            INNER JOIN T_OITM ON T_OBTN.ItemCode = T_OITM.ItemCode
            LEFT JOIN (
                SELECT TOP (1) *
                FROM kc_now
                WHERE Modify = 'Y'
                AND ConfirmDate IS NOT NULL
                AND ItemName = #{sc.modle}
                ORDER BY ConfirmDate DESC
            ) _first ON _first.ItemName = T_OBTN.ItemName
            LEFT JOIN (
                SELECT TOP (1) *
                FROM (
                    SELECT
                        ROW_NUMBER() OVER ( ORDER BY T.ConfirmDate DESC ) AS 'LineNum',
                        *
                    FROM (
                        SELECT DISTINCT
                            ConfirmDate,
                            kc_price_final,
                            ItemName
                        FROM kc_now
                        WHERE Modify = 'Y'
                        AND ConfirmDate IS NOT NULL
                        AND ItemName = #{sc.modle}) T) TT
                    WHERE TT.LineNum > 1
            ) _Second ON _Second.ItemName = T_OBTN.ItemName
            LEFT JOIN (
                        SELECT TOP (1) *
                        FROM (
                            SELECT
                                ROW_NUMBER() OVER ( ORDER BY T.ConfirmDate DESC ) AS 'LineNum',
                                *
                            FROM (
                                SELECT DISTINCT
                                    ConfirmDate,
                                    kc_price_final,
                                    ItemName
                                FROM kc_now
                                WHERE Modify = 'Y'
                                AND ConfirmDate IS NOT NULL
                                AND ItemName = #{sc.modle}
                            ) T
                        ) TT
                        WHERE TT.LineNum > 2
            ) _Third ON _Third.ItemName = T_OBTN.ItemName
            WHERE T_OBTN.ItemName = #{sc.modle}
            AND T.Quantity > 0
        ) T1
        WHERE T1.ROWNUMBER > (@CurrentPage - 1) * @PageSize
    </select>
    <select id="countStockPriceTabList" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM (
                 SELECT
                     ROW_NUMBER() OVER (ORDER BY T_OBTN.ItemName DESC)                          AS ROWNUMBER
                 FROM (SELECT MdAbsEntry, SUM(Quantity) AS Quantity FROM T_OBTQ GROUP BY MdAbsEntry) T
                          INNER JOIN T_OBTN ON T.MdAbsEntry = T_OBTN.AbsEntry
                          INNER JOIN T_OITM ON T_OBTN.ItemCode = T_OITM.ItemCode
                          LEFT JOIN (
                     SELECT TOP (1) *
                     FROM kc_now
                     WHERE Modify = 'Y'
                       AND ConfirmDate IS NOT NULL
                       AND ItemName = #{sc.modle}
                     ORDER BY ConfirmDate DESC
                 ) _first ON _first.ItemName = T_OBTN.ItemName
                          LEFT JOIN (
                     SELECT TOP (1) *
                     FROM (
                              SELECT
                                  ROW_NUMBER() OVER ( ORDER BY T.ConfirmDate DESC ) AS 'LineNum',
                                  *
                              FROM (
                                       SELECT DISTINCT
                                           ConfirmDate,
                                           kc_price_final,
                                           ItemName
                                       FROM kc_now
                                       WHERE Modify = 'Y'
                                         AND ConfirmDate IS NOT NULL
                                         AND ItemName = #{sc.modle}) T) TT
                     WHERE TT.LineNum > 1
                 ) _Second ON _Second.ItemName = T_OBTN.ItemName
                          LEFT JOIN (
                     SELECT TOP (1) *
                     FROM (
                              SELECT
                                  ROW_NUMBER() OVER ( ORDER BY T.ConfirmDate DESC ) AS 'LineNum',
                                  *
                              FROM (
                                       SELECT DISTINCT
                                           ConfirmDate,
                                           kc_price_final,
                                           ItemName
                                       FROM kc_now
                                       WHERE Modify = 'Y'
                                         AND ConfirmDate IS NOT NULL
                                         AND ItemName = #{sc.modle}
                                   ) T
                          ) TT
                     WHERE TT.LineNum > 2
                 ) _Third ON _Third.ItemName = T_OBTN.ItemName
                 WHERE T_OBTN.ItemName = #{sc.modle}
                   AND T.Quantity > 0
        ) T
    </select>
    <select id="selectQuotationTabList" resultType="com.lianchuangjie.lianchuangjie.vo.Quotation.TabQuotationStockVO">
        SELECT
            T_OBTQ.WhsCode, /*仓库*/
            T_OBTN.U_AreaType, /*库存性质*/
            T_OBTN.InDate, /*入库时间*/
            T_OBTN.ItemName, /*型号*/
            T_OBTN.U_ECCN, /*ECCN*/
            Brand.Brand AS 'QuoBrand', /*品牌*/
            T_OBTN.U_Batch, /*批次*/
            T_OBTQ.Quantity, /*库存数量*/
            T_OBTN.U_LockQty, /*锁货数量*/
            T_OBTN.U_Remark, /*备注*/
            T_OBTN.U_msl, /*MSL*/
            T_OBTN.U_COO, /*产地*/
            T_OBTN.U_MPQ, /*MPQ*/
            T_OBTN.U_BuyerName, /*采购员*/
            T_OBTN.U_Package, /*包装*/
            T_OBTN.U_OriginalBid, /*原标*/
            T_OBTN.U_Secrecy, /*保密*/
            IIF(T_OBTQ.Quantity IS NOT NULL AND T_OBTN.U_LockQty IS NOT NULL, T_OBTQ.Quantity - T_OBTN.U_LockQty, NULL) AS 'AvailableQty', /*可用数量*/
            T_OBTN.U_GrindingCode /*磨码说明*/
        FROM T_OBTN /*库存批次表*/
        LEFT JOIN T_OBTQ
            ON T_OBTQ.MdAbsEntry = T_OBTN.AbsEntry /*库存数量表，通过批次和型号代码关联*/
            AND T_OBTQ.ItemCode = T_OBTN.ItemCode
        LEFT JOIN (
            /*通过物料编码字段 匹配 T_OITM（物料主数据表）的品牌*/
            SELECT
                T0.ItemName,
                IIF(ISNULL(T1.U_QuoBrand,'') = '', T1.U_Brand, T1.U_QuoBrand) AS Brand
            FROM T_OBTN T0
            INNER JOIN T_OITM T1 ON T0.ItemCode = T1.ItemCode
        ) Brand ON Brand.ItemName = T_OBTN.ItemName
        WHERE T_OBTN.ItemName IN (
            SELECT SDADA_1.sno
            FROM SDADA SDADA_1
            WHERE SDADA_1.TAG IN (
                SELECT SDADA.TAG FROM SDADA WHERE SDADA.sno = #{sc.modle}
            )
        )
        <if test="sc.year">
            AND T_OBTN.U_Batch = #{sc.year} /*批次条件*/
        </if>
    </select>
    <select id="selectStockRankTabList"
            resultType="com.lianchuangjie.lianchuangjie.vo.StockRank.TabStockRankStockVO">
        SELECT
        T_OBTQ.WhsCode, /*仓库*/
        T_OBTN.U_AreaType, /*库存性质*/
        T_OBTN.InDate, /*入库时间*/
        T_OBTN.ItemName, /*型号*/
        T_OBTN.U_ECCN, /*ECCN*/
        Brand.Brand AS 'QuoBrand', /*品牌*/
        T_OBTN.U_Batch, /*批次*/
        T_OBTQ.Quantity, /*库存数量*/
        T_OBTN.U_LockQty, /*锁货数量*/
        T_OBTN.U_Remark, /*备注*/
        T_OBTN.U_msl, /*MSL*/
        T_OBTN.U_COO, /*产地*/
        T_OBTN.U_MPQ, /*MPQ*/
        T_OBTN.U_BuyerName, /*采购员*/
        T_OBTN.U_Package, /*包装*/
        T_OBTN.U_OriginalBid, /*原标*/
        T_OBTN.U_Secrecy, /*保密*/
        IIF(T_OBTQ.Quantity IS NOT NULL AND T_OBTN.U_LockQty IS NOT NULL, T_OBTQ.Quantity - T_OBTN.U_LockQty, NULL) AS 'AvailableQty', /*可用数量*/
        T_OBTN.U_GrindingCode /*磨码说明*/
        FROM T_OBTN /*库存批次表*/
        LEFT JOIN T_OBTQ
        ON T_OBTQ.MdAbsEntry = T_OBTN.AbsEntry /*库存数量表，通过批次和型号代码关联*/
        AND T_OBTQ.ItemCode = T_OBTN.ItemCode
        LEFT JOIN (
            /*通过物料编码字段 匹配 T_OITM（物料主数据表）的品牌*/
            SELECT
            T0.ItemName,
            IIF(ISNULL(T1.U_QuoBrand,'') = '', T1.U_Brand, T1.U_QuoBrand) AS Brand
            FROM T_OBTN T0
            INNER JOIN T_OITM T1 ON T0.ItemCode = T1.ItemCode
        ) Brand ON Brand.ItemName = T_OBTN.ItemName
        WHERE T_OBTN.ItemName IN (
        SELECT SDADA_1.sno
        FROM SDADA SDADA_1
        WHERE SDADA_1.TAG IN (
        SELECT SDADA.TAG FROM SDADA WHERE SDADA.sno = #{sc.modle}
        )
        )
        <if test="sc.year">
            AND T_OBTN.U_Batch = #{sc.year} /*批次条件*/
        </if>
    </select>
</mapper>
