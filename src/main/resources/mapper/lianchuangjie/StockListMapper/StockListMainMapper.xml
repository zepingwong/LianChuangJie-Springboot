<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianchuangjie.lianchuangjie.mapper.StockList.StockListMainMapper">

    <select id="selectList" resultType="com.lianchuangjie.lianchuangjie.vo.StockList.StockListMainVO">
        SELECT
            T.DocEntry,
            T.CardCode,
            T.CardName,
            T.CreateDate,
            T.GroupName,
            T.Level,
            StockList1.EnquiryCount,
            StockList1.SQuantity, /*库存数量*/
            SUM(StockList1._SuggestionQty) AS 'SuggestionQty'
        FROM (
            SELECT * FROM U_StockList
            <where>
                1=1
                <if test="sc.cardCode != null">
                    AND U_StockList.CardCode = #{sc.cardCode}
                </if>
                <if test="sc.status != null">
                    AND U_StockList.Status = #{sc.status}
                </if>
                <if test="sc.createDateStart != null">
                    AND U_StockList.CreateDate >= #{sc.createDateStart}
                </if>
                <if test="sc.createDateStart != null">
                    AND U_StockList.CreateDate &lt; #{sc.createDateEnd}
                </if>
            </where>
        ) T
        LEFT JOIN (
            SELECT
                U_StockList1.DocEntry,
                U_StockList1.LineNum,
                CEILING(
                    /*（最近三个月贸易商询价数量-最近三个月贸易商成单数量）*0.7+（最近三个月终端客户询价数量-最近三个月终端客户成单数量）*/
                    (ISNULL(InquiryDemandQty1, 0) - ISNULL(ORDR1.SumQuantity, 0)) * 0.7 +
                    (ISNULL(InquiryDemandQty2, 0) - ISNULL(ORDR2.SumQuantity, 0)) +
                    /*近三个月成单数量*/
                    ISNULL(ORDR2.SumQuantity + ORDR1.SumQuantity, 0) -
                    /*在途库存数量*/
                    ISNULL(OpenQuantity.OpenQty, 0) -
                    /*现有库存数量*/
                    ISNULL(StockQuantity.Quantity, 0)
                ) AS '_SuggestionQty', /*建议补货数量*/
                ISNULL(Enquiry.EnquiryCount, 0) AS EnquiryCount,
                ISNULL(StockQuantity.Quantity, 0) AS SQuantity /*现有库存条数*/
            FROM U_StockList1
            /*库存排名前1000*/
            LEFT JOIN U_StockRank ON U_StockRank.Modle = U_StockList1.Modle
                AND U_StockRank.Brand = U_StockList1.Brand
                AND U_StockRank.DocEntry &lt;= 1000
            LEFT JOIN (
                /*各型号品牌现有库存数量*/
                SELECT
                    T_OBTN.ItemName,
                    StockBrand.Brand,
                SUM(
                    CASE
                    WHEN T.Quantity = 0 THEN 0
                    WHEN T.Quantity &lt; T_OBTN.U_LockQty THEN T.Quantity
                    ELSE T_OBTN.U_LockQty
                    END
                ) AS Quantity
                FROM (
                    SELECT
                    MdAbsEntry,
                    SUM(Quantity) AS Quantity
                    FROM T_OBTQ
                    GROUP BY MdAbsEntry
                ) T
                INNER JOIN T_OBTN ON T.MdAbsEntry = T_OBTN.AbsEntry
                LEFT JOIN (
                    /*通过物料编码字段 匹配 T_OITM（物料主数据表）的品牌*/
                    SELECT
                    T_OBTN.ItemName,
                    IIF(ISNULL(T_OITM.U_QuoBrand, '') = '', T_OITM.U_Brand, T_OITM.U_QuoBrand) AS Brand
                    FROM T_OBTN
                    INNER JOIN T_OITM ON T_OBTN.ItemCode = T_OITM.ItemCode
                ) StockBrand ON StockBrand.ItemName = T_OBTN.ItemName
                GROUP BY T_OBTN.ItemName, StockBrand.Brand
            ) StockQuantity ON StockQuantity.ItemName = U_StockRank.Modle AND StockQuantity.Brand = U_StockRank.Brand
            LEFT JOIN (
                SELECT
                    T_OPOR1.Dscription,
                    T_OPOR1.U_Brand,
                    SUM(T_OPOR1.OpenQty) AS OpenQty
                FROM T_OPOR1
                WHERE U_AreaType = 2
                AND LineStatus = 'O'
                GROUP BY T_OPOR1.Dscription, T_OPOR1.U_Brand
            ) OpenQuantity ON OpenQuantity.Dscription = U_StockRank.Modle AND OpenQuantity.U_Brand = U_StockRank.Brand /*在途库存*/
            LEFT JOIN (
                /*近三个月贸易商成交数量*/
                SELECT
                    SUM(T_ORDR1.Quantity) AS SumQuantity, /*销售数量*/
                    T_ORDR1.U_Brand,
                    T_ORDR1.Dscription
                FROM T_ORDR1
                LEFT JOIN T_ORDR ON T_ORDR.DocEntry = T_ORDR1.DocEntry
                WHERE T_ORDR.U_GroupName IN (N'其它', N'一般贸易商', N'关系型贸易商')
                AND DATEDIFF(MONTH, T_ORDR.DocDate, GETDATE()) &lt;= 2
                GROUP BY
                T_ORDR1.U_Brand,
                T_ORDR1.Dscription
            ) ORDR1 ON ORDR1.U_Brand = U_StockRank.Brand AND ORDR1.Dscription = U_StockRank.Modle /*贸易商成交数量*/
            /*近两周询价条数*/
            LEFT JOIN (
                SELECT
                    COUNT(U_ICIN1.LineNum) AS EnquiryCount,
                    U_ICIN1.Modle,
                    U_ICIN1.Brand
                FROM U_ICIN1
                LEFT JOIN T_ICIN ON U_ICIN1.DocEntry = T_ICIN.DocEntry
                WHERE DATEDIFF(dd, T_ICIN.CreateDate, GETDATE()) &lt; 14
                GROUP BY
                U_ICIN1.Modle,
                U_ICIN1.Brand
            ) Enquiry ON Enquiry.Modle = U_StockList1.Modle AND Enquiry.Brand = U_StockList1.Brand
            LEFT JOIN (
                /*近三个月终端客户成交数量*/
                SELECT
                    SUM(T_ORDR1.Quantity) AS SumQuantity, /*销售数量*/
                    T_ORDR1.U_Brand,
                    T_ORDR1.Dscription
                FROM T_ORDR1
                LEFT JOIN T_ORDR ON T_ORDR.DocEntry = T_ORDR1.DocEntry
                WHERE T_ORDR.U_GroupName IN (N'其它', N'一般贸易商', N'关系型贸易商')
                AND DATEDIFF(MONTH, T_ORDR.DocDate, GETDATE()) &lt;= 2
                GROUP BY
                T_ORDR1.U_Brand,
                T_ORDR1.Dscription
            ) ORDR2 ON ORDR2.U_Brand = U_StockRank.Brand AND ORDR2.Dscription = U_StockRank.Modle /*终端客户成交数量*/
        ) StockList1 ON StockList1.DocEntry = T.DocEntry
        GROUP BY T.DocEntry, T.CardCode, T.CardName, T.CreateDate, T.GroupName, T.Level, StockList1.EnquiryCount, StockList1.SQuantity
    </select>
</mapper>
