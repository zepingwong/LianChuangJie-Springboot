<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianchuangjie.lianchuangjie.mapper.StockPrice.StockPriceMapper">
    <update id="update" parameterType="com.lianchuangjie.lianchuangjie.dto.StockPrice.StockPriceOKDTO">
        UPDATE kc_now
        <set>
            <if test="da.price2w != null">
                price_2w = #{da.price2w},
            </if>
            <if test="da.price2w5w != null">
                price_2w_5w = #{da.price2w5w},
            </if>
            <if test="da.price5w10w != null">
                price_5w_10w = #{da.price5w10w},
            </if>
            <if test="da.price10w != null">
                price_10w = #{da.price10w},
            </if>
            <if test="da.kcPriceFinal">
                Modify = 'Y',
                kc_price_final = #{da.kcPriceFinal},
                ConfirmDate = getdate()
            </if>
        </set>
        WHERE kc_now.ItemName = #{da.itemName}
        AND kc_now.Brand = #{da.brand}
        AND kc_now.DocDate = #{da.docDate}
        AND kc_now.Batch = #{da.batch}
    </update>
    <select id="selectList" resultType="com.lianchuangjie.lianchuangjie.vo.StockPrice.StockPriceVO">
        SELECT
            StockPrice.DocDate, /*今日日期*/
            StockPrice.InDate, /*库存日期*/
            StockPrice.FrgnName, /*品名*/
            StockPrice.Brand, /*品牌*/
            StockPrice.ItemName, /*型号*/
            StockPrice.Batch, /*批次*/
            StockPrice.U_Batch, /*原批次*/
            StockPrice.Quantity, /*库存数量*/
            StockPrice.TypeCode, /*库存类型*/
            StockPrice.U_Secrecy, /*是否保密*/
            Round(StockPrice.U_Price, 2) AS 'U_Price', /*库存成本价*/
            Round(StockPrice.LastSalePrice, 2) AS 'LastSalePrice', /*最近一次销售报价*/
            StockPrice.LastSaleDate, /*最近一次销售报价时间*/
            Round(StockPrice.LastPurchasePrice, 2) AS 'LastPurchasePrice', /*最近一次采购报价*/
            StockPrice.LastPurchaseDate, /*最近一次采购报价时间*/
            Round(StockPrice.unit_price, 2) AS 'unit_price', /*云汉价*/
            StockPrice.unit_price_date, /*云汉价时间*/
            StockPrice.StockDays, /*库存天数*/
            StockPrice.Modify, /*是否人工修改*/
            Round(StockPrice.kc_price7, 2) AS 'kc_price7', /*库存定价(7天)*/
            ISNULL(StockPrice.reference7, '') AS 'reference7', /*七天定价参考*/
            StockPrice.kc_price , /*综合定价*/
            ISNULL(StockPrice.reference, '') AS 'reference', /*参考价格*/
            Round(StockPrice.kc_price_final, 2) AS 'kc_price_final',  /*最终库存定价*/
            ISNULL(StockPrice.reference_final, '') AS 'reference_final', /*最终参考价格*/
            Round(StockPrice.price_2w, 2) AS 'price_2w' , /*2w内单价*/
            StockPrice.quan_2w, /*2w区间*/
            Round(StockPrice.price_2w_5w, 2) AS 'price_2w_5w', /*2w-5w内单价*/
            StockPrice.quan_2w_5w, /*2w-5w区间*/
            Round(StockPrice.price_5w_10w, 2) AS 'price_5w_10w', /*5w-10w内单价*/
            StockPrice.quan_5w_10w, /*5w-10w区间*/
            Round(StockPrice.price_10w, 2) AS 'price_10w', /*10w+单价*/
            StockPrice.quan_10w, /*10w+区间*/
            history.ConfirmDate AS 'LastPricingTime', /*最近一次定价时间*/
            Round(history.kc_price_final, 2) AS 'LastPrice' /*最近一次定价单价*/
        FROM (
            SELECT * FROM kc_now
            <where>
                1=1
                <if test="sc.typeCode != null">
                    AND kc_now.TypeCode = #{sc.typeCode}
                </if>
                <if test="sc.stockDays != null">
                    AND kc_now.StockDays >= #{sc.stockDays}
                </if>
                <if test="sc.needReplenish == true">
                    AND DateDiff(dd,kc_now.LastPurchaseDate,getdate()) > 7
                </if>
                <if test="sc.needReplenish == false">
                    AND DateDiff(dd,kc_now.LastPurchaseDate,getdate()) &lt;= 7
                </if>
                <if test="sc.brand != null">
                    AND kc_now.Brand = #{sc.brand}
                </if>
                <if test="sc.modle != null">
                    AND kc_now.ItemName = #{sc.modle}
                </if>
                <if test="sc.modify != null">
                    /*已处理*/
                    AND kc_now.Modify = #{sc.modify}
                </if>
                <if test="sc.newToday != null">
                    /*今日新入库*/
                    AND kc_now.NewToday = #{sc.newToday}
                </if>
                AND DateDiff(dd,kc_now.DocDate,getdate()) = 0
            </where>
        ) StockPrice
        LEFT JOIN (
            /*最近一次定价信息*/
            SELECT DISTINCT
            kc_now.Brand,
            kc_now.ItemName,
            kc_now.Batch,
            kc_now.kc_price_final,
            kc_now.ConfirmDate
            FROM (
                SELECT
                ItemName,
                Brand,
                Batch,
                MAX ( ConfirmDate ) AS ConfirmDate
                FROM kc_now
                WHERE Modify = 'Y'
                GROUP BY ItemName, Brand, Batch
            ) LastDate
            LEFT JOIN kc_now
            ON kc_now.ItemName = LastDate.ItemName
            AND LastDate.Brand = kc_now.Brand
            AND LastDate.ConfirmDate = kc_now.ConfirmDate
        ) history
            ON history.Brand = StockPrice.Brand
            AND history.ItemName = StockPrice.ItemName
            AND history.Batch = StockPrice.Batch
        LEFT JOIN (
            /*最近一次成单信息*/
            SELECT
                T.Dscription,
                T.U_Brand,
                T.U_Batch,
                MAX ( T.DocDate ) AS DocDate
            FROM (
            SELECT
                T_OPOR1.Dscription,
                T_OPOR.DocDate,
                T_OPOR1.U_Brand,
                T_OPOR1.U_Batch
                FROM T_OPOR1
                LEFT JOIN T_OPOR ON T_OPOR.DocEntry = T_OPOR1.DocEntry
            ) T
            WHERE T.Dscription IN (
                SELECT ItemName
                FROM kc_now
                WHERE DateDiff(dd,kc_now.DocDate,getdate()) = 0
            )
            GROUP BY
                T.Dscription,
                T.U_Brand,
                T.U_Batch
        ) LastOrder
            ON LastOrder.U_Batch = StockPrice.U_Batch
            AND LastOrder.Dscription = StockPrice.ItemName
            AND LastOrder.U_Brand = StockPrice.Brand
        <where>

            <if test="sc.pricingType == 0">
                AND (
                (StockPrice.TypeCode = N'奇货可居' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 3 OR history.ConfirmDate IS NULL))
                OR (StockPrice.TypeCode = N'特别关注' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 10 OR history.ConfirmDate IS NULL))
                OR (StockPrice.TypeCode = N'热门型号' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 20 OR history.ConfirmDate IS NULL))
                OR (StockPrice.TypeCode = N'普通库存' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 60 OR history.ConfirmDate IS NULL))
                OR (StockPrice.TypeCode = N'呆滞物料' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 365 OR history.ConfirmDate IS NULL))
                )
            </if>
            <if test="sc.pricingType == 1">
                AND (
                /*差异大于10%, 缺少最近一次定价也视为差异大于10%*/
                history.kc_price_final IS NULL OR
                ABS(StockPrice.kc_price_final - history.kc_price_final) /history.kc_price_final >= 0.1
                )
            </if>
            <if test="sc.pricingType == 2">
                AND (
                    (
                        (StockPrice.TypeCode = N'奇货可居' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 3 OR history.ConfirmDate IS NULL))
                        OR (StockPrice.TypeCode = N'特别关注' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 10 OR history.ConfirmDate IS NULL))
                        OR (StockPrice.TypeCode = N'热门型号' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 20 OR history.ConfirmDate IS NULL))
                        OR (StockPrice.TypeCode = N'普通库存' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 60 OR history.ConfirmDate IS NULL))
                        OR (StockPrice.TypeCode = N'呆滞物料' AND (DateDiff(dd, history.ConfirmDate, getdate()) >= 365 OR history.ConfirmDate IS NULL))
                    )
                    OR (
                        history.kc_price_final IS NULL OR
                        ABS(StockPrice.kc_price_final - history.kc_price_final) /history.kc_price_final >= 0.1
                    )
                )
            </if>
            <if test="sc.orderDate != null">
                AND LastOrder.DocDate >= #{sc.orderDate}
            </if>
        </where>
    </select>
    <select id="tabList" resultType="com.lianchuangjie.lianchuangjie.vo.StockPrice.TabStockPriceBaseVO">
        SELECT
            kc_now.kc_price14, /*库存定价(14天)*/
            kc_now.kc_price30, /*库存定价(14天)*/
            Round(kc_now.LastSalePrice, 2) AS 'LastSalePrice', /*最近一次销售报价*/
            kc_now.LastSaleDate, /*最近一次销售报价*/
            Round(kc_now.LastPurchasePrice, 2) AS 'LastPurchasePrice', /*最近一次采购报价*/
            kc_now.LastPurchaseDate, /*最近一次采购报价时间*/
            kc_now.unit_price, /*云汉价*/
            kc_now.unit_price_date, /*云汉价时间*/
            Round(kc_now.cg_avg7, 2) AS 'cg_avg7', /*cg_avg7*/
            Round(kc_now.cg_avg14, 2) AS 'cg_avg14', /*cg_avg14*/
            Round(kc_now.cg_avg30, 2) AS 'cg_avg30', /*cg_avg30*/
            Round(kc_now.xs_avg7, 2) AS 'xs_avg7', /*xs_avg7*/
            Round(kc_now.xs_avg14, 2) AS 'xs_avg14', /*xs_avg14*/
            Round(kc_now.xs_avg30, 2) AS 'xs_avg30', /*xs_avg30*/
            ISNULL(kc_now.reference30, '') AS 'reference30', /*reference30*/
            ISNULL(kc_now.reference14, '') AS 'reference14', /*reference14*/
            SDADA.spq, /*spq*/
            SDADA.packing,
            SDADA.package,
            SDADA.datasheet, /*技术资料url*/
            SDADA.msl_new /*msl*/
        FROM kc_now
        LEFT JOIN SDADA ON SDADA.QuoBrand=kc_now.Brand AND SDADA.sno = kc_now.ItemName
        WHERE kc_now.ItemName IN (
            SELECT SDADA_1.sno
            FROM SDADA SDADA_1
            WHERE SDADA_1.TAG IN (
                SELECT SDADA.TAG
                FROM SDADA
                WHERE SDADA.sno IN <foreach collection="sc.modleList " item="item" open="(" separator="," close=")" index="index">'${item}'</foreach>
            )
        )
    </select>
    <select id="inAdvance" resultType="com.lianchuangjie.lianchuangjie.vo.StockPrice.StockPriceVO">
        SELECT
            kc_now.DocDate, /*今日日期*/
            kc_now.InDate, /*库存日期*/
            kc_now.FrgnName, /*品名*/
            kc_now.Brand, /*品牌*/
            kc_now.ItemName, /*型号*/
            kc_now.Batch, /*批次*/
            kc_now.U_Batch, /*原批次*/
            kc_now.Quantity, /*库存数量*/
            kc_now.TypeCode, /*库存类型*/
            kc_now.U_Secrecy, /*是否保密*/
            Round(kc_now.U_Price, 2) AS 'U_Price', /*库存成本价*/
            Round(kc_now.LastSalePrice, 2) AS 'LastSalePrice', /*最近一次销售报价*/
            kc_now.LastSaleDate, /*最近一次销售报价时间*/
            Round(kc_now.LastPurchasePrice, 2) AS 'LastPurchasePrice', /*最近一次采购报价*/
            kc_now.LastPurchaseDate, /*最近一次采购报价时间*/
            Round(kc_now.unit_price, 2) AS 'unit_price', /*云汉价*/
            kc_now.unit_price_date, /*云汉价时间*/
            kc_now.StockDays, /*库存天数*/
            kc_now.Modify, /*是否人工修改*/
            Round(kc_now.kc_price7, 2) AS 'kc_price7', /*库存定价(7天)*/
            kc_now.reference7, /*七天定价参考*/
            kc_now.kc_price , /*综合定价*/
            kc_now.reference, /*参考价格*/
            Round(kc_now.kc_price_final, 2) AS 'kc_price_final',  /*最终库存定价*/
            kc_now.reference_final, /*最终参考价格*/
            Round(kc_now.price_2w, 2) AS 'price_2w' , /*2w内单价*/
            kc_now.quan_2w, /*2w区间*/
            Round(kc_now.price_2w_5w, 2) AS 'price_2w_5w', /*2w-5w内单价*/
            kc_now.quan_2w_5w, /*2w-5w区间*/
            Round(kc_now.price_5w_10w, 2) AS 'price_5w_10w', /*5w-10w内单价*/
            kc_now.quan_5w_10w, /*5w-10w区间*/
            Round(kc_now.price_10w, 2) AS 'price_10w', /*10w+单价*/
            kc_now.quan_10w, /*10w+区间*/
            history.ConfirmDate AS 'LastPricingTime', /*最近一次定价时间*/
            Round(history.kc_price_final, 2) AS 'LastPrice' /*最近一次定价单价*/
        FROM kc_now
        LEFT JOIN (
            SELECT DISTINCT
                kc_now.Brand,
                kc_now.ItemName,
                kc_now.Batch,
                kc_now.kc_price_final,
                kc_now.ConfirmDate
            FROM (
                SELECT
                    ItemName,
                    Brand,
                    Batch,
                    MAX ( ConfirmDate ) AS ConfirmDate
                FROM kc_now
                WHERE Modify = 'Y'
                GROUP BY ItemName, Brand, Batch
            ) LastDate
            LEFT JOIN kc_now
                ON kc_now.ItemName = LastDate.ItemName
                AND LastDate.Brand = kc_now.Brand
                AND LastDate.ConfirmDate = kc_now.ConfirmDate
        ) history
            ON history.Brand = kc_now.Brand
            AND history.ItemName = kc_now.ItemName
            AND history.Batch = kc_now.Batch
        WHERE (
            (kc_now.TypeCode = N'奇货可居' AND (DateDiff(dd, history.ConfirmDate, getdate()) &lt; 3))
            OR (kc_now.TypeCode = N'特别关注' AND (DateDiff(dd, history.ConfirmDate, getdate()) &lt; 10))
            OR (kc_now.TypeCode = N'热门型号' AND (DateDiff(dd, history.ConfirmDate, getdate()) &lt; 20))
            OR (kc_now.TypeCode = N'普通库存' AND (DateDiff(dd, history.ConfirmDate, getdate()) &lt; 60))
            OR (kc_now.TypeCode = N'呆滞物料' AND (DateDiff(dd, history.ConfirmDate, getdate()) &lt; 365))
        )
        AND DateDiff(dd,kc_now.DocDate,getdate())=0
        AND kc_now.ItemName LIKE CONCAT('%', #{modle} ,'%')
    </select>
</mapper>
